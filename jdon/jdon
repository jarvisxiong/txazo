编程习惯:
1. 删除未使用代码
2. 添加代码注释
3. 重构代码
4. 类、方法、变量命名规范
5. 消除重复代码
6. 类职责分离、避免臃肿

软件复杂性:
1. 减少组件之间的交互

可扩展性: 高吞吐、低延迟

性能优化:
1. 异步: 队列、线程池
2. 数据源: 内存、磁盘、数据库、网络、缓存
3. 资源池化: 对象池、线程池、连接池